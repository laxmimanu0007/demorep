#include<stdio.h>

int LRU(int times[],int m){
           int pos=0;
           int min= times[0];
           for(int i=0;i<m;i++){
                     if(times[i]<min){
                             min=times[i];
                             pos=i;
                          }
                       }
            return pos;
        }

void printblock(int block[],int n){
           for(int i=0;i<n;i++){
                   if(block[i]==-1){
                         printf("-");
                      }
                   else{
                       printf("%d ",block[i]);
                      }
                  }
              }

int main(){
       int times[3];
       int pages[]={1,2,3,4,4,5,6};
       int blocks[3];
       int m=3;
       int n=sizeof(pages)/sizeof(pages[0]);
       printf("Block size is:%d\n",m);
       int pagefaults=0;
       for(int i=0;i<m;i++){
                   blocks[i]=-1;
                   times[i]=0;
                 }
       for(int i=0;i<n;i++){
                int found=0;
                for(int j=0;j<m;j++){
                        if(pages[i]==blocks[j]){
                              found=1;
                              times[j]=i+1;
                              break;
                           }
                         }
                 if(!found){
                       int pos=LRU(times,3);
                       blocks[pos]=pages[i];
                       times[pos]=i+1;
                       pagefaults++;
                      }
                 printf("Incoming page: %d\n",i);
                 printblock(blocks,m);
                 pagefaults++;
                }
              printf("\nNo.of pagefaults:%d",pagefaults);
              return 0;
}

                            